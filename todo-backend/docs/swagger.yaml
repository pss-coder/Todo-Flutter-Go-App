basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Todo:
    properties:
      completed:
        type: boolean
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      role:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for the Todo backend.
  title: Todo Backend API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates user and sets a JWT token in a cookie
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /logout:
    get:
      description: Clears the authentication cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout user
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Signup user
      tags:
      - auth
  /todos:
    get:
      description: get all todos (requires login)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Add a new todo item (requires login)
      parameters:
      - description: Todo to add
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
      security:
      - ApiKeyAuth: []
      summary: Add a new todo
      tags:
      - todos
  /todos/{id}:
    delete:
      description: Delete a todo by ID (requires login)
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      security:
      - ApiKeyAuth: []
      summary: Delete a todo
      tags:
      - todos
    put:
      description: Toggle the completed state of a todo by ID (requires login)
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      security:
      - ApiKeyAuth: []
      summary: Toggle a todo's completion
      tags:
      - todos
swagger: "2.0"
